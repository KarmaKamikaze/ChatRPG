@namespace ChatRPG.Pages
@inherits ComponentBase
@inject NavigationManager NavMan

<header>
    <nav class="navbar navbar-dark custom-gray-container border-bottom box-shadow">
        <div class="container">
            <a class="navbar-brand" href="/">
                <div class="logo-name-group">
                    <img class="site-icon" src="favicon.png" asp-append-version="true"
                         alt="Adventure game logo">
                    <div class="logo-name-group-text">
                        ChatRPG
                    </div>
                </div>
            </a>
            <div class="d-sm-inline-flex flex-sm-row-reverse">
                <div class="hstack">
                    <button @onclick='() => NavMan.NavigateTo("/", forceLoad: true)' class="btn btn-in"
                            id="dashboard-button"
                            style="@(!_isHidden ? "display:block;" : "display:none;")">
                        <span class="btn-in-span"></span>Dashboard
                    </button>
                    <button @onclick='() => NavMan.NavigateTo("Manage", forceLoad: true)' class="btn btn-in" id="manage-button">
                        <span class="btn-in-span"></span>@Username
                    </button>
                    <button @onclick='() => NavMan.NavigateTo("Logout", forceLoad: true)' class="btn btn-in" id="logout-button">
                        <span class="btn-in-span"></span>Log Out
                    </button>
                </div>
            </div>
        </div>
    </nav>
</header>

@code {
    private bool _isHidden;

    [Parameter, EditorRequired]
    public string Username { get; set; } = null!;

    protected override void OnInitialized()
    {
        NavMan.LocationChanged += HandleLocationChanged;
        UpdateVisibility();
    }

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        UpdateVisibility();
        InvokeAsync(StateHasChanged);
    }

    private void UpdateVisibility()
    {
        _isHidden = NavMan.Uri.TrimEnd('/') == NavMan.BaseUri.TrimEnd('/');
    }

    public void Dispose()
    {
        NavMan.LocationChanged -= HandleLocationChanged;
    }

}
